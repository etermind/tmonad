{
    "name": "@etermind/tmonad",
    "version": "3.5.1",
    "description": "A set of tools to use pure functional programming with generators in TypeScript",
    "keywords": [
        "functional",
        "monad",
        "typescript",
        "generator"
    ],
    "author": "Etermind",
    "license": "MIT",
    "main": "dist/lib/index.js",
    "module": "dist/lib/index.js",
    "types": "dist/types/index.d.ts",
    "engines": {
        "node": ">=16"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/etermind/tmonad"
    },
    "scripts": {
        "prebuild": "npx rimraf dist",
        "build": "npx tsc --module commonjs",
        "build:watch": "npx tsc -w --module commonjs",
        "dev:watch": "npx tsc-watch --module commonjs --onSuccess 'npm run dev'",
        "dev": "node --harmony ./dist/lib/index.js",
        "test": "npx jest --coverage",
        "test:watch": "npx jest --coverage --watch",
        "test:prod": "npm run lint && npm run test -- --no-cache",
        "lint": "npx eslint --fix '{lib/**/*.ts,tests/**/*.ts}'",
        "docs": "npx typedoc --out docs lib"
    },
    "dependencies": {
        "@types/node": "^16"
    },
    "devDependencies": {
        "@types/chai": "^4",
        "@types/jest": "^28",
        "@types/sinon": "^10",
        "@typescript-eslint/eslint-plugin": "^5",
        "@typescript-eslint/parser": "^5",
        "chai": "4.x",
        "eslint": "^8",
        "eslint-plugin-jsdoc": "^39",
        "@codejedi365/gitlab-npm-audit-parser": "^2.x",
        "jest": "^28.x",
        "jest-config": "^28.x",
        "lodash.camelcase": "^4.3.0",
        "rimraf": "^3",
        "sinon": "^14",
        "ts-jest": "^28.x",
        "tsc-watch": "^5",
        "typedoc": "^0.23.x",
        "typescript": "^4.x"
    },
    "jest": {
        "transform": {
            ".(ts|tsx)": "ts-jest"
        },
        "testEnvironment": "node",
        "testRegex": "(/tests/.*|\\.(test|spec|func))\\.(ts|tsx|js)$",
        "moduleFileExtensions": [
            "ts",
            "tsx",
            "js"
        ],
        "coveragePathIgnorePatterns": [
            "/node_modules/",
            "/tests/"
        ],
        "coverageThreshold": {
            "global": {
                "branches": 85,
                "functions": 85,
                "lines": 85,
                "statements": 85
            }
        },
        "collectCoverageFrom": [
            "lib/**/*.{js,ts}"
        ]
    }
}
